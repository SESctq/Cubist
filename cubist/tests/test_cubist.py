import pytest

import pandas as pd

from cubist import Cubist

titanic = pd.read_csv("https://raw.githubusercontent.com/mwaskom/seaborn-data/master/raw/titanic.csv")
titanic = titanic.drop(["name", "ticket"], axis=1)

y = titanic["fare"]
X = titanic.drop(["fare"], axis=1)


@pytest.mark.parametrize(
    "expected_output",
    [True]
)
def test_model_instance(expected_output):
    model = Cubist()
    assert isinstance(model, Cubist) == expected_output


# @pytest.mark.parametrize(
#     "expected_output",
#     [[15.245800018310547, 6.650341033935547, 7.922945499420166, 33.0, 12.828949928283691, 78.8499984741211, 7.783935546875, 18.0, 7.834166526794434, 26.734573364257812, 53.4385986328125, 7.676785945892334, 25.466699600219727, 7.815273761749268, 14.335333824157715, 35.166568756103516, 52.55419921875, 7.783935546875, 13.54690933227539, 52.24131774902344, 7.825055122375488, 30.71587371826172, 7.8541998863220215, 7.922945499420166, 11.682758331298828, 27.899999618530273, 27.720800399780273, 13.005203247070312, 27.899999618530273, 8.029417991638184, 8.555885314941406, 7.59499979019165, 65.47128295898438, 8.01035213470459, 7.599564552307129, 14.507865905761719, 29.45025062561035, 7.783935546875, 83.242919921875, 11.682758331298828, 73.5, 15.800687789916992, 11.682758331298828, 8.90919017791748, 14.45419979095459, 34.375, 8.555885314941406, 8.274209976196289, 7.825055122375488, 113.2750015258789, 19.25830078125, 93.5, 27.899999618530273, 120.0, 7.75, 79.19873046875, 12.005444526672363, 247.5207977294922, 14.09999942779541, 7.879199981689453, 7.959794998168945, 19.5, 25.971332550048828, 26.11798858642578, 8.90919017791748, 10.5, 21.292572021484375, 10.7567777633667, 6.386866092681885, 78.2667007446289, 26.0, 262.375, 28.83970069885254, 83.25989532470703, 8.274209976196289, 15.550000190734863, 7.810667514801025, 49.5, 13.0, 20.212499618530273, 39.62200164794922, 15.860067367553711, 135.2122039794922, 8.90919017791748, 30.69580078125, 44.812843322753906, 113.2750015258789, 50.612762451171875, 9.985000610351562, 11.682758331298828, 20.524999618530273, 31.323333740234375, 31.393360137939453, 8.90919017791748, 11.682758331298828, 11.096607208251953, 52.0, 7.982500076293945, 15.667333602905273, 9.160699844360352, 25.591999053955078, 7.286242961883545, 99.95866394042969, 8.774521827697754, 8.86850357055664, 12.382299423217773, 39.0, 38.62834167480469, 25.87291717529297, 31.0, 61.73735046386719, 7.977135181427002, 87.6923599243164, 26.329500198364258, 221.49676513671875, 7.922945499420166, 39.345558166503906, 12.875, 29.0, 34.375, 11.5, 76.29170227050781, 77.95829772949219, 29.0, 7.901805400848389, 100.04969024658203, 25.94219970703125, 79.19999694824219, 14.456249237060547, 7.959794998168945, 7.783935546875, 15.245800018310547, 7.168421745300293, 12.475000381469727, 54.21303176879883, 12.866950035095215, 83.87321472167969, 10.7567777633667, 7.723700046539307, 13.70516586303711, 7.959794998168945, 26.0, 8.859333038330078, 26.0, 29.125, 32.5, 7.377902984619141, 10.5, 142.20335388183594, 7.616944789886475, 7.818284034729004, 7.825055122375488, 8.098588943481445, 17.662500381469727, 11.682758331298828, 11.682758331298828, 22.25824546813965, 7.783935546875, 26.0, 15.5, 7.227799892425537, 36.723472595214844, 17.33333396911621, 87.90008544921875, 8.90919017791748, 61.97919845581055, 18.48069953918457, 61.73735046386719, 8.19410514831543, 7.286242961883545, 63.358299255371094, 13.0, 26.329500198364258, 15.245800018310547, 7.958713531494141, 7.818284034729004, 31.387500762939453, 18.242000579833984, 16.700000762939453]]
# )
# def test_cubist(expected_output):
#     model = Cubist()
#     model.fit(X, y)
#     assert model.predict(X).tolist() == expected_output